/*
 * afrodite-backend
 *
 * Dating app backend API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ProfileVisibility {
    #[serde(rename = "PendingPrivate")]
    PendingPrivate,
    #[serde(rename = "PendingPublic")]
    PendingPublic,
    #[serde(rename = "Private")]
    Private,
    #[serde(rename = "Public")]
    Public,

}

impl std::fmt::Display for ProfileVisibility {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::PendingPrivate => write!(f, "PendingPrivate"),
            Self::PendingPublic => write!(f, "PendingPublic"),
            Self::Private => write!(f, "Private"),
            Self::Public => write!(f, "Public"),
        }
    }
}

impl Default for ProfileVisibility {
    fn default() -> ProfileVisibility {
        Self::PendingPrivate
    }
}

