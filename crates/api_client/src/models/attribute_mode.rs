/*
 * dating-app-backend
 *
 * Dating app backend API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AttributeMode {
    #[serde(rename = "SelectSingleFilterSingle")]
    SelectSingleFilterSingle,
    #[serde(rename = "SelectSingleFilterMultiple")]
    SelectSingleFilterMultiple,
    #[serde(rename = "SelectMultipleFilterMultiple")]
    SelectMultipleFilterMultiple,
    #[serde(rename = "SelectMultipleFilterMultipleNumberList")]
    SelectMultipleFilterMultipleNumberList,

}

impl std::fmt::Display for AttributeMode {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::SelectSingleFilterSingle => write!(f, "SelectSingleFilterSingle"),
            Self::SelectSingleFilterMultiple => write!(f, "SelectSingleFilterMultiple"),
            Self::SelectMultipleFilterMultiple => write!(f, "SelectMultipleFilterMultiple"),
            Self::SelectMultipleFilterMultipleNumberList => write!(f, "SelectMultipleFilterMultipleNumberList"),
        }
    }
}

impl Default for AttributeMode {
    fn default() -> AttributeMode {
        Self::SelectSingleFilterSingle
    }
}

