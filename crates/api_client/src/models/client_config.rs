/*
 * afrodite-backend
 *
 * Dating app backend API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ClientConfig {
    /// None, if client features are not configured.
    #[serde(rename = "client_features", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub client_features: Option<Option<Box<models::ClientFeaturesConfigHash>>>,
    /// None, if custom reports are not configured.
    #[serde(rename = "custom_reports", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub custom_reports: Option<Option<Box<models::CustomReportsConfigHash>>>,
    /// None, if attributes are not configured.
    #[serde(rename = "profile_attributes", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub profile_attributes: Option<Option<Box<models::PartialProfileAttributesConfig>>>,
    #[serde(rename = "sync_version")]
    pub sync_version: Box<models::ClientConfigSyncVersion>,
}

impl ClientConfig {
    pub fn new(sync_version: models::ClientConfigSyncVersion) -> ClientConfig {
        ClientConfig {
            client_features: None,
            custom_reports: None,
            profile_attributes: None,
            sync_version: Box::new(sync_version),
        }
    }
}

