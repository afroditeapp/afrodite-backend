/*
 * pihka-backend
 *
 * Pihka backend API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModerationRequest {
    #[serde(rename = "content")]
    pub content: Box<models::ModerationRequestContent>,
    #[serde(rename = "state")]
    pub state: models::ModerationRequestState,
    #[serde(rename = "waiting_position", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub waiting_position: Option<Option<i64>>,
}

impl ModerationRequest {
    pub fn new(content: models::ModerationRequestContent, state: models::ModerationRequestState) -> ModerationRequest {
        ModerationRequest {
            content: Box::new(content),
            state,
            waiting_position: None,
        }
    }
}

