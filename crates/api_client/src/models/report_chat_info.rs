/*
 * afrodite-backend
 *
 * Dating app backend API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ReportChatInfo {
    #[serde(rename = "creator_blocked_target", skip_serializing_if = "Option::is_none")]
    pub creator_blocked_target: Option<bool>,
    #[serde(rename = "creator_sent_messages_count", skip_serializing_if = "Option::is_none")]
    pub creator_sent_messages_count: Option<i64>,
    #[serde(rename = "state")]
    pub state: models::ReportChatInfoInteractionState,
    #[serde(rename = "target_blocked_creator", skip_serializing_if = "Option::is_none")]
    pub target_blocked_creator: Option<bool>,
    #[serde(rename = "target_sent_messages_count", skip_serializing_if = "Option::is_none")]
    pub target_sent_messages_count: Option<i64>,
}

impl ReportChatInfo {
    pub fn new(state: models::ReportChatInfoInteractionState) -> ReportChatInfo {
        ReportChatInfo {
            creator_blocked_target: None,
            creator_sent_messages_count: None,
            state,
            target_blocked_creator: None,
            target_sent_messages_count: None,
        }
    }
}

