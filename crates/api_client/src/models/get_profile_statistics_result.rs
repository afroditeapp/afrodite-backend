/*
 * afrodite-backend
 *
 * Dating app backend API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetProfileStatisticsResult {
    #[serde(rename = "account_count_bots_excluded")]
    pub account_count_bots_excluded: i64,
    #[serde(rename = "age_counts")]
    pub age_counts: Box<models::ProfileAgeCounts>,
    /// Average WebSocket connections per hour
    #[serde(rename = "connections_average")]
    pub connections_average: Box<models::ConnectionStatistics>,
    /// Max WebSocket connections per hour
    #[serde(rename = "connections_max")]
    pub connections_max: Box<models::ConnectionStatistics>,
    /// Min WebSocket connections per hour
    #[serde(rename = "connections_min")]
    pub connections_min: Box<models::ConnectionStatistics>,
    #[serde(rename = "generation_time")]
    pub generation_time: Box<models::UnixTime>,
    #[serde(rename = "online_account_count_bots_excluded")]
    pub online_account_count_bots_excluded: i64,
}

impl GetProfileStatisticsResult {
    pub fn new(account_count_bots_excluded: i64, age_counts: models::ProfileAgeCounts, connections_average: models::ConnectionStatistics, connections_max: models::ConnectionStatistics, connections_min: models::ConnectionStatistics, generation_time: models::UnixTime, online_account_count_bots_excluded: i64) -> GetProfileStatisticsResult {
        GetProfileStatisticsResult {
            account_count_bots_excluded,
            age_counts: Box::new(age_counts),
            connections_average: Box::new(connections_average),
            connections_max: Box::new(connections_max),
            connections_min: Box::new(connections_min),
            generation_time: Box::new(generation_time),
            online_account_count_bots_excluded,
        }
    }
}

