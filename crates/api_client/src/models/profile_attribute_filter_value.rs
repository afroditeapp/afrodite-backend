/*
 * dating-app-backend
 *
 * Dating app backend API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProfileAttributeFilterValue {
    #[serde(rename = "accept_missing_attribute")]
    pub accept_missing_attribute: bool,
    /// - First value is bitflags value or top level attribute value ID or first number list value. - Second value is sub level attribute value ID or second number list value. - Third and rest are number list values.  The number list values are in ascending order.
    #[serde(rename = "filter_values")]
    pub filter_values: Vec<i32>,
    /// Attribute ID
    #[serde(rename = "id")]
    pub id: i32,
}

impl ProfileAttributeFilterValue {
    pub fn new(accept_missing_attribute: bool, filter_values: Vec<i32>, id: i32) -> ProfileAttributeFilterValue {
        ProfileAttributeFilterValue {
            accept_missing_attribute,
            filter_values,
            id,
        }
    }
}

