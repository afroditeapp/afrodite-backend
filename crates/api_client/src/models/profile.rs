/*
 * afrodite-backend
 *
 * Dating app backend API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Profile : Public profile info
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Profile {
    #[serde(rename = "age")]
    pub age: i64,
    #[serde(rename = "attributes", skip_serializing_if = "Option::is_none")]
    pub attributes: Option<Vec<models::ProfileAttributeValue>>,
    /// A string wrapper that ensures the string is not empty. This type is used for TEXT columns that should not allow empty strings. In the database, these columns are NULL when there is no value, and this type represents non-NULL values that must be non-empty.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The name has been accepted using allowlist or manual moderation.
    #[serde(rename = "name_accepted", skip_serializing_if = "Option::is_none")]
    pub name_accepted: Option<bool>,
    /// A string wrapper that ensures the string is not empty. This type is used for TEXT columns that should not allow empty strings. In the database, these columns are NULL when there is no value, and this type represents non-NULL values that must be non-empty.
    #[serde(rename = "ptext", skip_serializing_if = "Option::is_none")]
    pub ptext: Option<String>,
    /// The profile text has been accepted by bot or human moderator.
    #[serde(rename = "ptext_accepted", skip_serializing_if = "Option::is_none")]
    pub ptext_accepted: Option<bool>,
    #[serde(rename = "unlimited_likes", skip_serializing_if = "Option::is_none")]
    pub unlimited_likes: Option<bool>,
}

impl Profile {
    /// Public profile info
    pub fn new(age: i64) -> Profile {
        Profile {
            age,
            attributes: None,
            name: None,
            name_accepted: None,
            ptext: None,
            ptext_accepted: None,
            unlimited_likes: None,
        }
    }
}

