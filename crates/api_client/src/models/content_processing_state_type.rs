/*
 * afrodite-backend
 *
 * Dating app backend API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ContentProcessingStateType {
    #[serde(rename = "Empty")]
    Empty,
    #[serde(rename = "InQueue")]
    InQueue,
    #[serde(rename = "Processing")]
    Processing,
    #[serde(rename = "Completed")]
    Completed,
    #[serde(rename = "Failed")]
    Failed,
    #[serde(rename = "NsfwDetected")]
    NsfwDetected,

}

impl std::fmt::Display for ContentProcessingStateType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Empty => write!(f, "Empty"),
            Self::InQueue => write!(f, "InQueue"),
            Self::Processing => write!(f, "Processing"),
            Self::Completed => write!(f, "Completed"),
            Self::Failed => write!(f, "Failed"),
            Self::NsfwDetected => write!(f, "NsfwDetected"),
        }
    }
}

impl Default for ContentProcessingStateType {
    fn default() -> ContentProcessingStateType {
        Self::Empty
    }
}

