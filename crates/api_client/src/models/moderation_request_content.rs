/*
 * pihka-backend
 *
 * Pihka backend API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ModerationRequestContent {
    /// Use slot 1 image as camera image.
    #[serde(rename = "camera_image")]
    pub camera_image: bool,
    #[serde(rename = "image1")]
    pub image1: Box<crate::models::ContentId>,
    #[serde(rename = "image2", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub image2: Option<Option<Box<crate::models::ContentId>>>,
    #[serde(rename = "image3", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub image3: Option<Option<Box<crate::models::ContentId>>>,
}

impl ModerationRequestContent {
    pub fn new(camera_image: bool, image1: crate::models::ContentId) -> ModerationRequestContent {
        ModerationRequestContent {
            camera_image,
            image1: Box::new(image1),
            image2: None,
            image3: None,
        }
    }
}


