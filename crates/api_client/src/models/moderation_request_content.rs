/*
 * pihka-backend
 *
 * Pihka backend API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ModerationRequestContent {
    #[serde(rename = "content0")]
    pub content0: Box<crate::models::ContentId>,
    #[serde(rename = "content1", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub content1: Option<Option<Box<crate::models::ContentId>>>,
    #[serde(rename = "content2", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub content2: Option<Option<Box<crate::models::ContentId>>>,
    #[serde(rename = "content3", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub content3: Option<Option<Box<crate::models::ContentId>>>,
    #[serde(rename = "content4", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub content4: Option<Option<Box<crate::models::ContentId>>>,
    #[serde(rename = "content5", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub content5: Option<Option<Box<crate::models::ContentId>>>,
    #[serde(rename = "content6", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub content6: Option<Option<Box<crate::models::ContentId>>>,
}

impl ModerationRequestContent {
    pub fn new(content0: crate::models::ContentId) -> ModerationRequestContent {
        ModerationRequestContent {
            content0: Box::new(content0),
            content1: None,
            content2: None,
            content3: None,
            content4: None,
            content5: None,
            content6: None,
        }
    }
}


