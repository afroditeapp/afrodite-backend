/*
 * afrodite-backend
 *
 * Dating app backend API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetMediaContentResult {
    #[serde(rename = "profile_content")]
    pub profile_content: Box<models::MyProfileContent>,
    #[serde(rename = "profile_content_version")]
    pub profile_content_version: Box<models::ProfileContentVersion>,
    #[serde(rename = "security_content", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub security_content: Option<Option<Box<models::ContentInfoWithFd>>>,
    /// Sync version for profile and security content
    #[serde(rename = "sync_version")]
    pub sync_version: Box<models::SyncVersion>,
}

impl GetMediaContentResult {
    pub fn new(profile_content: models::MyProfileContent, profile_content_version: models::ProfileContentVersion, sync_version: models::SyncVersion) -> GetMediaContentResult {
        GetMediaContentResult {
            profile_content: Box::new(profile_content),
            profile_content_version: Box::new(profile_content_version),
            security_content: None,
            sync_version: Box::new(sync_version),
        }
    }
}

