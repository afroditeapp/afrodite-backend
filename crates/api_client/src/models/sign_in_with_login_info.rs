/*
 * afrodite-backend
 *
 * Dating app backend API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SignInWithLoginInfo {
    #[serde(rename = "apple", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub apple: Option<Option<Box<models::SignInWithAppleInfo>>>,
    #[serde(rename = "client_info")]
    pub client_info: Box<models::ClientInfo>,
    #[serde(rename = "disable_registering", skip_serializing_if = "Option::is_none")]
    pub disable_registering: Option<bool>,
    #[serde(rename = "google", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub google: Option<Option<Box<models::SignInWithGoogleInfo>>>,
}

impl SignInWithLoginInfo {
    pub fn new(client_info: models::ClientInfo) -> SignInWithLoginInfo {
        SignInWithLoginInfo {
            apple: None,
            client_info: Box::new(client_info),
            disable_registering: None,
            google: None,
        }
    }
}

