/*
 * pihka-backend
 *
 * Pihka backend API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ClientType {
    #[serde(rename = "Android")]
    Android,
    #[serde(rename = "Ios")]
    Ios,
    #[serde(rename = "Web")]
    Web,

}

impl std::fmt::Display for ClientType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Android => write!(f, "Android"),
            Self::Ios => write!(f, "Ios"),
            Self::Web => write!(f, "Web"),
        }
    }
}

impl Default for ClientType {
    fn default() -> ClientType {
        Self::Android
    }
}

