/*
 * pihka-backend
 *
 * Pihka backend API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ContentInfoDetailed {
    #[serde(rename = "content_type")]
    pub content_type: models::MediaContentType,
    #[serde(rename = "id")]
    pub id: Box<models::ContentId>,
    #[serde(rename = "secure_capture")]
    pub secure_capture: bool,
    #[serde(rename = "slot", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub slot: Option<Option<models::ContentSlot>>,
    #[serde(rename = "state")]
    pub state: models::ContentState,
}

impl ContentInfoDetailed {
    pub fn new(content_type: models::MediaContentType, id: models::ContentId, secure_capture: bool, state: models::ContentState) -> ContentInfoDetailed {
        ContentInfoDetailed {
            content_type,
            id: Box::new(id),
            secure_capture,
            slot: None,
            state,
        }
    }
}

