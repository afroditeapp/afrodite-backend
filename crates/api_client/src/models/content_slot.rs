/*
 * dating-app-backend
 *
 * Dating app backend API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ContentSlot {
    #[serde(rename = "Content0")]
    Content0,
    #[serde(rename = "Content1")]
    Content1,
    #[serde(rename = "Content2")]
    Content2,
    #[serde(rename = "Content3")]
    Content3,
    #[serde(rename = "Content4")]
    Content4,
    #[serde(rename = "Content5")]
    Content5,
    #[serde(rename = "Content6")]
    Content6,

}

impl std::fmt::Display for ContentSlot {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Content0 => write!(f, "Content0"),
            Self::Content1 => write!(f, "Content1"),
            Self::Content2 => write!(f, "Content2"),
            Self::Content3 => write!(f, "Content3"),
            Self::Content4 => write!(f, "Content4"),
            Self::Content5 => write!(f, "Content5"),
            Self::Content6 => write!(f, "Content6"),
        }
    }
}

impl Default for ContentSlot {
    fn default() -> ContentSlot {
        Self::Content0
    }
}

