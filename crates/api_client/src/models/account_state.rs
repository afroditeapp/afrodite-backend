/*
 * dating-app-backend
 *
 * Dating app backend API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AccountState {
    #[serde(rename = "InitialSetup")]
    InitialSetup,
    #[serde(rename = "Normal")]
    Normal,
    #[serde(rename = "Banned")]
    Banned,
    #[serde(rename = "PendingDeletion")]
    PendingDeletion,

}

impl std::fmt::Display for AccountState {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::InitialSetup => write!(f, "InitialSetup"),
            Self::Normal => write!(f, "Normal"),
            Self::Banned => write!(f, "Banned"),
            Self::PendingDeletion => write!(f, "PendingDeletion"),
        }
    }
}

impl Default for AccountState {
    fn default() -> AccountState {
        Self::InitialSetup
    }
}

