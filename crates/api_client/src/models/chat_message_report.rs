/*
 * afrodite-backend
 *
 * Dating app backend API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ChatMessageReport {
    /// Message without encryption and signing
    #[serde(rename = "message_base64")]
    pub message_base64: String,
    #[serde(rename = "message_id")]
    pub message_id: Box<models::MessageId>,
    #[serde(rename = "message_time")]
    pub message_time: Box<models::UnixTime>,
    #[serde(rename = "receiver")]
    pub receiver: Box<models::AccountId>,
    #[serde(rename = "sender")]
    pub sender: Box<models::AccountId>,
}

impl ChatMessageReport {
    pub fn new(message_base64: String, message_id: models::MessageId, message_time: models::UnixTime, receiver: models::AccountId, sender: models::AccountId) -> ChatMessageReport {
        ChatMessageReport {
            message_base64,
            message_id: Box::new(message_id),
            message_time: Box::new(message_time),
            receiver: Box::new(receiver),
            sender: Box::new(sender),
        }
    }
}

