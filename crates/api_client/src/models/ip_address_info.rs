/*
 * afrodite-backend
 *
 * Dating app backend API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IpAddressInfo {
    /// IP address
    #[serde(rename = "a")]
    pub a: String,
    /// Usage count
    #[serde(rename = "c")]
    pub c: i64,
    /// First usage time
    #[serde(rename = "f")]
    pub f: Box<models::UnixTime>,
    /// Latest usage time
    #[serde(rename = "l")]
    pub l: Box<models::UnixTime>,
    /// IP list names. IP address belongs to these IP lists.
    #[serde(rename = "lists", skip_serializing_if = "Option::is_none")]
    pub lists: Option<Vec<String>>,
}

impl IpAddressInfo {
    pub fn new(a: String, c: i64, f: models::UnixTime, l: models::UnixTime) -> IpAddressInfo {
        IpAddressInfo {
            a,
            c,
            f: Box::new(f),
            l: Box::new(l),
            lists: None,
        }
    }
}

