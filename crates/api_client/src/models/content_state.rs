/*
 * pihka-backend
 *
 * Pihka backend API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */


/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ContentState {
    #[serde(rename = "InSlot")]
    InSlot,
    #[serde(rename = "InModeration")]
    InModeration,
    #[serde(rename = "ModeratedAsAccepted")]
    ModeratedAsAccepted,
    #[serde(rename = "ModeratedAsRejected")]
    ModeratedAsRejected,

}

impl ToString for ContentState {
    fn to_string(&self) -> String {
        match self {
            Self::InSlot => String::from("InSlot"),
            Self::InModeration => String::from("InModeration"),
            Self::ModeratedAsAccepted => String::from("ModeratedAsAccepted"),
            Self::ModeratedAsRejected => String::from("ModeratedAsRejected"),
        }
    }
}

impl Default for ContentState {
    fn default() -> ContentState {
        Self::InSlot
    }
}




