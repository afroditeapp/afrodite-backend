/*
 * pihka-backend
 *
 * Pihka backend API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ContentState {
    #[serde(rename = "InSlot")]
    InSlot,
    #[serde(rename = "InModeration")]
    InModeration,
    #[serde(rename = "ModeratedAsAccepted")]
    ModeratedAsAccepted,
    #[serde(rename = "ModeratedAsRejected")]
    ModeratedAsRejected,

}

impl std::fmt::Display for ContentState {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::InSlot => write!(f, "InSlot"),
            Self::InModeration => write!(f, "InModeration"),
            Self::ModeratedAsAccepted => write!(f, "ModeratedAsAccepted"),
            Self::ModeratedAsRejected => write!(f, "ModeratedAsRejected"),
        }
    }
}

impl Default for ContentState {
    fn default() -> ContentState {
        Self::InSlot
    }
}

