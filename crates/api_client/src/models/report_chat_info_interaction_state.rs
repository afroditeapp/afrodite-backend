/*
 * afrodite-backend
 *
 * Dating app backend API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ReportChatInfoInteractionState {
    #[serde(rename = "None")]
    None,
    #[serde(rename = "CreatorLiked")]
    CreatorLiked,
    #[serde(rename = "TargetLiked")]
    TargetLiked,
    #[serde(rename = "Match")]
    Match,

}

impl std::fmt::Display for ReportChatInfoInteractionState {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::None => write!(f, "None"),
            Self::CreatorLiked => write!(f, "CreatorLiked"),
            Self::TargetLiked => write!(f, "TargetLiked"),
            Self::Match => write!(f, "Match"),
        }
    }
}

impl Default for ReportChatInfoInteractionState {
    fn default() -> ReportChatInfoInteractionState {
        Self::None
    }
}

