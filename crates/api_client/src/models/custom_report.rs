/*
 * afrodite-backend
 *
 * Dating app backend API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CustomReport {
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "key")]
    pub key: String,
    #[serde(rename = "name")]
    pub name: String,
    /// Client should order custom reports with this number when [CustomReportsOrderMode::OrderNumber] is selected.
    #[serde(rename = "order_number")]
    pub order_number: i32,
    #[serde(rename = "report_type")]
    pub report_type: models::CustomReportType,
    #[serde(rename = "translations", skip_serializing_if = "Option::is_none")]
    pub translations: Option<Vec<models::CustomReportLanguage>>,
    /// Client should show the report type when making a new report.
    #[serde(rename = "visible", skip_serializing_if = "Option::is_none")]
    pub visible: Option<bool>,
}

impl CustomReport {
    pub fn new(id: i32, key: String, name: String, order_number: i32, report_type: models::CustomReportType) -> CustomReport {
        CustomReport {
            id,
            key,
            name,
            order_number,
            report_type,
            translations: None,
            visible: None,
        }
    }
}

