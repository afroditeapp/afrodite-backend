/*
 * pihka-backend
 *
 * Pihka backend API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetProfileResult {
    /// Account's most recent disconnect time.  If the last seen time is not None, then it is Unix timestamp or -1 if the profile is currently online.
    #[serde(rename = "lst", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub lst: Option<Option<i64>>,
    #[serde(rename = "p", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub p: Option<Option<Box<models::Profile>>>,
    #[serde(rename = "v", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub v: Option<Option<Box<models::ProfileVersion>>>,
}

impl GetProfileResult {
    pub fn new() -> GetProfileResult {
        GetProfileResult {
            lst: None,
            p: None,
            v: None,
        }
    }
}

