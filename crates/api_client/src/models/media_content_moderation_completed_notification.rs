/*
 * afrodite-backend
 *
 * Dating app backend API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MediaContentModerationCompletedNotification {
    #[serde(rename = "accepted")]
    pub accepted: Box<models::NotificationStatus>,
    #[serde(rename = "deleted")]
    pub deleted: Box<models::NotificationStatus>,
    #[serde(rename = "rejected")]
    pub rejected: Box<models::NotificationStatus>,
}

impl MediaContentModerationCompletedNotification {
    pub fn new(accepted: models::NotificationStatus, deleted: models::NotificationStatus, rejected: models::NotificationStatus) -> MediaContentModerationCompletedNotification {
        MediaContentModerationCompletedNotification {
            accepted: Box::new(accepted),
            deleted: Box::new(deleted),
            rejected: Box::new(rejected),
        }
    }
}

